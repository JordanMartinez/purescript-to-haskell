name:    my-yesod
version: "0.0.0"

# Note: the dependency ranges were removed. I'm relying upon the
# Stack LTS resolver to ensure these build together.
dependencies:
- base

# Prelude + TH
- classy-prelude
- safe # expose safer wrappers around unsafe Prelude functions
- template-haskell

# Core: Non Text
- unordered-containers
- containers
- vector
- time

# Core: Text
- bytestring
- text
- case-insensitive

# Domain: Error-Handling
- monad-control

# Domain: Loggers
- monad-logger
- fast-logger

# Domain: Seralization
- yaml
- aeson

# API: Web Application Interface
- wai
- wai-extra
- wai-logger

# Really Unsafe Pointer-based Storage?
- foreign-store

# Infrastructure: Web Server
- warp
- http-client-tls

# Infrastructure: File System
- directory
- file-embed

# Infrastructure: Streaming IO
- conduit
- classy-prelude-conduit
- http-conduit

# API/Infrastructure: Database
- persistent
- persistent-postgresql
- persistent-template

# Hamlet, Julius, Cassius/Lucius
- shakespeare

# JS Minifier
- hjsmin

# Default Type Class
- data-default

# Yesod
- yesod
- yesod-core
- yesod-auth
- yesod-static
- yesod-form
- classy-prelude-yesod

# The library contains all of our application code. The executable
# defined below is just a thin wrapper.
library:
  source-dirs: src
  # Make developer experience similar to PureScript
  default-extensions:
  - KindSignatures
  - LiberalTypeSynonyms
  - EmptyDataDecls
  - OverloadedLists
  - OverloadedStrings
  - NumericUnderscores
  - NegativeLiterals
  - MultiParamTypeClasses
  - ConstrainedClassMethods
  - FlexibleInstances
  - FlexibleContexts
  - FunctionalDependencies
  - ConstraintKinds
  - InstanceSigs
  - DeriveFunctor
  - DeriveFoldable
  - DeriveTraversable
  - GeneralizedNewtypeDeriving
  - DerivingVia
  - MonoLocalBinds
  - PatternGuards
  - ScopedTypeVariables
  - RankNTypes
  - LambdaCase
  - BlockArguments
  - TypeApplications
  - RecordWildCards
  - NamedFieldPuns
  - ApplicativeDo
  - BangPatterns
  - PartialTypeSignatures
  - ExplicitNamespaces
  # Haskell-Only stuff
  - TemplateHaskell
  - PolyKinds
  when:
  - condition: (flag(dev)) || (flag(library-only))
    then:
      ghc-options:
      - -Wall
      - -Wincomplete-uni-patterns
      - -Wincomplete-record-updates
      - -Wmissing-export-lists
      - -Widentities
      - -Wredundant-constraints
      - -Wpartial-fields
      - -Wcompat
      - -fprint-expanded-synonyms
      - -fprint-explicit-foralls
      - -ferror-spans
      - -fwarn-tabs
      - -O0
      cpp-options: -DDEVELOPMENT
    else:
      ghc-options:
      - -Wall
      - -Wincomplete-uni-patterns
      - -Wincomplete-record-updates
      - -Wmissing-export-lists
      - -Widentities
      - -Wredundant-constraints
      - -Wpartial-fields
      - -Wcompat
      - -fprint-expanded-synonyms
      - -fprint-explicit-foralls
      - -ferror-spans
      - -fwarn-tabs
      - -Werror
      - -O2

# Runnable executable for our application
executables:
  my-yesod:
    main: main.hs
    source-dirs: app
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - my-yesod
    when:
    - condition: flag(library-only)
      buildable: false

# Test suite
tests:
  my-yesod-test:
    main: Spec.hs
    source-dirs: test
      # Make developer experience similar to PureScript
      default-extensions:
      - KindSignatures
      - LiberalTypeSynonyms
      - EmptyDataDecls
      - OverloadedLists
      - OverloadedStrings
      - NumericUnderscores
      - NegativeLiterals
      - MultiParamTypeClasses
      - ConstrainedClassMethods
      - FlexibleInstances
      - FlexibleContexts
      - FunctionalDependencies
      - ConstraintKinds
      - InstanceSigs
      - DeriveFunctor
      - DeriveFoldable
      - DeriveTraversable
      - GeneralizedNewtypeDeriving
      - DerivingVia
      - MonoLocalBinds
      - PatternGuards
      - ScopedTypeVariables
      - RankNTypes
      - LambdaCase
      - BlockArguments
      - TypeApplications
      - RecordWildCards
      - NamedFieldPuns
      - ApplicativeDo
      - BangPatterns
      - PartialTypeSignatures
      - ExplicitNamespaces
      # Haskell-Only stuff
      - TemplateHaskell
      - PolyKinds
    ghc-options:
    - -Wall
    - -Wincomplete-uni-patterns
    - -Wincomplete-record-updates
    - -Wmissing-export-lists
    - -Widentities
    - -Wredundant-constraints
    - -Wpartial-fields
    - -Wcompat
    - -fprint-expanded-synonyms
    - -fprint-explicit-foralls
    - -ferror-spans
    - -fwarn-tabs
    dependencies:
    - my-yesod
    - hspec
    - yesod-test

# Define flags used by "yesod devel" to make compilation faster
flags:
  library-only:
    description: Build for use with "yesod devel"
    manual: false
    default: false
  dev:
    description: Turn on development settings, like auto-reload templates.
    manual: false
    default: false
